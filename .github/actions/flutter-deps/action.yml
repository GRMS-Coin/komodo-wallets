name: "Flutter Dependencies"
description: "Installs Flutter and any other dependencies required for the build"
inputs:
  firebase_project_id:
    description: "Firebase project ID to configure"
    required: false
    default: ""
  firebase_service_account_key:
    description: "Firebase service account key JSON as a base64-encoded string"
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Get stable flutter
      uses: subosito/flutter-action@v2
      with:
        # NB! Keep up-to-date with the flutter version used for development
        flutter-version: "3.29.2"
        channel: "stable"

    - name: Prepare build directory
      shell: bash
      run: |
        flutter clean
        rm -rf build/*
        rm -rf web/src/mm2/*
        rm -rf web/src/kdfi/*
        rm -rf web/dist/*

    - name: Install Firebase CLI and FlutterFire CLI
      shell: bash
      run: |
        # Install Firebase CLI first
        npm install -g firebase-tools

        # Verify Firebase CLI installation
        firebase --version

        # Install FlutterFire CLI
        dart pub global activate flutterfire_cli

    - name: Configure Firebase
      shell: bash
      if: ${{ inputs.firebase_project_id != '' && inputs.firebase_service_account_key != '' }}
      run: |
        # Add flutterfire to PATH
        export PATH="$PATH":"$HOME/.pub-cache/bin"

        # Validate and decode service account key
        # First check if it's valid base64
        if echo "${{ inputs.firebase_service_account_key }}" | base64 -d >/dev/null 2>&1; then
          echo "Service account key is valid base64, decoding..."
          echo "${{ inputs.firebase_service_account_key }}" | base64 -d > /tmp/firebase-service-account.json
        else
          echo "Service account key doesn't appear to be base64-encoded, using as-is..."
          echo "${{ inputs.firebase_service_account_key }}" > /tmp/firebase-service-account.json
        fi

        # Authenticate with Firebase using CI token
        # Using a simpler authentication approach for CI
        firebase use --add "${{ inputs.firebase_project_id }}" --token "${{ inputs.firebase_service_account_key }}"

        # Configure FlutterFire with the specified project
        flutterfire configure \
          --project=${{ inputs.firebase_project_id }} \
          --platforms=android,ios,macos,web \
          --yes
          
        # Clean up
        rm -f /tmp/firebase-service-account.json
